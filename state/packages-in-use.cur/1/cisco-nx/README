1. Introduction
---------------

   This document describes the NED for the Cisco Nexus device.

   The NED supports two communication methods towards the device:

   - CLI
     The NED connects to the device CLI using either SSH or Telnet.
     Configuration is done by sending native CLI commands to the
     device through the communication channel.

   - NXAPI
     The NED connects the device using the Cisco Nexus NXAPI, which
     is a REST/XML interface. Configuration is done by sending a full
     sequence of CLI commands using NXAPI messages.

2. Getting started
------------------

   Set up the environment in $DIR, change DIR to something suitable

     > tar xvzf ned-cisco-nx.tgz
     > mv ned-cisco-nx $NCS_DIR/packages/neds/

     > export DIR=/tmp/ncs-cisco-nx
     > ncs-setup --ned-package $NCS_DIR/packages/neds/cisco-nx --dest $DIR
     > cd $DIR

   Start ncs:
     > ncs

   Start NCS CLI:
     > ncs_cli -C -u admin

   In the NCS CLI configure the device. Enter configuration mode:
     # configure

   Set the required configurables, address, remote user data including
   remote secondary password, if needed:
     # devices device nxdev address <device address>
     # devices device nxdev device-type cli ned-id cisco-nx
     # devices device nxdev state admin-state unlocked

     # devices authgroups group nexus umap admin remote-name <login username>
     # devices authgroups group nexus umap admin remote-password <login password>
     # devices authgroups group nexus umap admin remote-secondary-password <the 'enable' password>
     # devices device nxdev authgroup nexus
     # commit

   For a CLI connection configure method, port and protocol:
     # devices device nxdev ned-settings cisco-nx-connection method cli
     # devices device nxdev port <typically 22 or 23>
     # devices device nxdev device-type cli protocol <telnet or ssh>
     # commit

   For a NXAPI connection configure method and port params:
     # devices device nxdev ned-settings cisco-nx-connection method nxapi
     # devices device nxdev port <typically 80 or 443>

   For a NXAPI connection over HTTPS it is also necessary to configure SSL:

   SSL alternative 1:

     Accept any SSL certificate presented by the device. This is unsafe
     and should only be used for testing.

     In the NCS CLI:
     # devices device nxdev ned-settings cisco-nx-connection ssl accept-any

   SSL alternative 2:

     Configure a specific SSL certificate for a device. The certificate
     shall be entered in DER Base64 format, which is the same as the
     PEM format but without the banners \"----- BEGIN CERTIFICATE-----\" etc.

     Use the Unix tool 'openssl' to fetch the PEM certificate from a device:

     In a Unix shell:
     > openssl s_client -connect <device address>:<port>

     In the NCS CLI:
     # devices device nxdev ned-settings cisco-nx-connection ssl certificate <Base64 binary>


   Optional debug and trace configurables:

     Make the NED dump all NXAPI or CLI messages sent to/from the Cisco Nexus device
     # devices global-settings trace raw
     # commit

     Make the NED print debug log messages
     # java-vm java-logging logger com.tailf.packages.ned.nexus level level-debug
     # commit

   Exit configure mode:
     # exit

   Try to connect to the device:
     # devices device nxdev connect

   Read the configuration from the device:
     # devices device nxdev sync-from

   Look at the configuration:
     # show running-config devices device nxdev

3. Other NED specific settings
------------------------------

   To be able to select the behaviour of the NED for configuration that varies
   between models/versions there are ned-settings which can be set globally or
   per ned instance. Specifically the NED has settings which can be forced to be
   enabled/disabled, or dynamically set depending on NX-OS version. These
   settings are found in the container cisco-nx-behaviours under ned-settings.

   Format for setting secondary addresses on vlan interfaces:
   --
   The setting 'iface-vlan-ipv6-secondary' selects the type of address settings
   to use for ipv6 addresses on vlan interfaces. When this setting is enabled a
   primary address must be set first, followed by secondary addresses which are
   marked with a 'secondary' tag appended to the address line. When disabled
   this tag is absent and the addresses are just added as a list. Currently this
   setting is enabled by default if NX-OS version is < 7.0.

   Alternative way to calculate transaction ID
   --
   To avoid the overhead of 'show running-config' in each transaction,
   especially with large device configurations, there is now a new way to
   calculate transaction IDs. This method by default let's the device calculate
   an md5-hash of the running-config by running the following commands (run as a
   one line towards device):

     show running-config | exclude Time: > volatile:///ncstransconf.tmp
     show file volatile:///ncstransconf.tmp md5sum
     delete volatile:///ncstransconf.tmp no-prompt

   To enable this behaviour, use the following ned-setting:

     ned-settings cisco-nx-transaction trans-id-method device-command

   The command(s) to run on the device to calculate the transaction-id is
   configurable (e.g. to be able to configure a 'cli alias' to be used together
   with NXAPI). This can be done with the following ned-setting:

     ned-settings cisco-nx-transaction trans-id-cmd mycommand

   (here 'mycommand' could be a cli alias configured on the device)

   The output from the command is hashed by the NED (to make it into a valid
   transaction-id in NSO), so the only thing to consider is that the output from
   the given command should be fixed for a given device configuration, being an
   equivalent of a 'hash' calculated from the 'static' running-config
   (e.g. excluding timestamp).

   Copy running config to startup config
   --
   By default the NED does 'copy running-config startup-config' after each
   successful transaction (i.e. in the persist-phase). This behaviour can be
   changed with the ned-setting 'cisco-nx-peristence/model'. This setting can
   take three values:

   'strict' (default):
   This is the default behaviour, always persisting device running-config to
   startup-config.

   'never':
   This setting inhibits the default, i.e. the running-config is never persisted
   to the startup-config.

   'schedule':
   This setting is a new new option introduced to improve performance when for
   example often doing several transactions in a row, where one would only want
   to persist the config after a delayed time, to remove the time waiting for the
   actual copy from the transactions (i.e. the device does it in the 'background').

   This works by configuring the device with a scheduler job which does the
   actual 'copy running-config startup-config'. One also configures a schedule
   which should run this job. The schedule name is given to NSO with the
   ned-setting 'cisco-nx-peristence/schedule/name'. One can also set the delay
   (in minutes) between the NSO transaction and the actual schedule on the
   device (default is 1 minute). The NED then schedules the job using the given
   schedule after the given delay.

   Example config on device:
     ...
     scheduler job name NSO_PERSIST
       copy running-config startup-config
     end-job

     scheduler schedule name NSO_PERSIST_SCHED
       job name NSO_PERSIST
     !

   Used with the following ned-settings in NSO:
     ...
     ned-settings cisco-nx-persistence model schedule
     ned-settings cisco-nx-persistence schedule name NSO_PERSIST_SCHED
     ned-settings cisco-nx-persistence schedule time 5


   Use device provided configuration 'diff' to save on bandwidth
   --
   The setting 'use-show-diff' enables the new behaviour of using device config
   'diff' instead of a full running-config on for example sync-from or
   compare-config. This setting is by default disabled. When enabled the NED
   only fetches the full running config once per 'instance', i.e. when the NED
   instance is created/connected. After that point, the local (NCS) config is
   updated by fetching 'diffs' from the device like this:

     show running-connfig | diff

   Note: this setting is no longer enabled by default, since inconsistencies has
   been found on some NX-OS versions causing out-of-sync issues.

   Always fetch interface values for shutdown/switchport regardless of default
   --
   The setting 'show-interface-all' can be used to enable the NED to always
   fetch values for switchport settings as well as shutdown leaf for all
   interface instances (i.e. in spite of these values normally being
   trimmed). This setting is useful for example to mitigate the somewhat
   intricate 'dynamic' defaults behaviour NX-OS has for handling the the value
   of switchport/shutdown (due to hard-coded behaviour and/or the global setting
   'system default switchport').

   By default, the command sent to the device to fetch the defaults are:

   For CLI:
       show running-config interface all | include \"interface|shutdown|switchport\" | exclude Time: | exclude vlan | exclude mode

   For NXAPI:
       show running-config interface all

   The command to run on the device to fetch the needed defaults can be set
   using the new ned-setting 'show-interface-all-cmd', for example to narrow
   what is being sent from device for specific use-case (especially for NXAPI
   where the default doesn't do any device-side filtering, due to limitations
   depending on how NXAPI is used.

   NOTE: As of version 4.4.4 of cisco-nx, show-interface-all works with NXAPI
   too.

   Syntax of 'port-channel load-balance' command
   --
   The setting 'port-channel-load-balance-ethernet' is used to select which
   syntax to use for this command. By default the syntax 'port-channel
   load-balance ethernet ...' is used in NX-OS version <= 5.2.

   Default value used for 'mac address-table notification mac-move'
   --
   The setting 'default-notification-mac-move' is used to set what default value
   the 'mac-move' leaf has. This affects how this value is trimmed from the
   config (i.e. the default is not shown). By default the ned assumes that in
   NX-OS version > 6.0 the default is enabled (i.e. mac-move is only shown when it
   is not set as 'no mac address-table notification mac-move').

   Default value used for 'lacp suspend-individual' under interface port-channel
   --
   The setting 'default-lacp-suspend-individual' is used to set what default
   value the 'suspend-individual' leaf has. This affects how this value is
   trimmed from the config (i.e. the default is not shown). By default the ned
   assumes that in NX-OS version > 5.1 the default is enabled
   (i.e. suspend-individual is only shown when it is not set as 'no lacp
   suspend-individual').

   Re-deploy L3-config after vrf member change on ethernet and vlan interfaces
   --
   The setting 'vrf-member-l3-redeploy' is used to force NSO to redeploy some
   layer3-config to ethernet, vlan and bdi interfaces when vrf membership is
   set/reset. This is useful since same value can't normally be re-set by NSO
   in same transaction because NSO does not know about the "reset-L3-config"
   behaviour. The config that is currently redeployed is:

      /interface/Ethernet/ip/address
      /interface/Ethernet/ip/secondary-addr
      /interface/Ethernet/ipv6/address/addresses
      /interface/Ethernet/ipv6/nd/prefix
      /interface/Vlan/fabric/forwarding/mode
      /interface/Vlan/ip/address
      /interface/Vlan/ip/secondary-addr
      /interface/Vlan/ip/forward
      /interface/Vlan/ipv6/address/addresses
      /interface/Vlan/ipv6/nd/prefix
      /interface/Vlan/ipv6/forward
      /interface/Bdi/fabric/forwarding/mode
      /interface/Bdi/ip/address
      /interface/Bdi/ip/secondary-addr
      /interface/Bdi/ip/forward
      /interface/Bdi/ipv6/address/addresses
      /interface/Bdi/ipv6/nd/prefix
      /interface/Bdi/ipv6/forward

   NOTE: All other l3-config must still be removed in NSO within same
         transaction to avoid out-of-sync (i.e. all other L3-config set in NSO)

   Re-deploy MTU value on ethernet interface when toggled to switchport
   --
   The setting 'switchport-mtu-redeploy' can be enabled to re-deploy mtu set in
   NSO on ethernet interface when toggled to switchport (i.e. to avoid mtu being
   reset to default).

   Default value used for 'service unsupported-transceiver'
   --
   The setting 'default-unsupported-transceiver' is used to set what default
   value the 'service unsupported-transceiver' leaf has. This affects how this
   value is trimmed from the config (i.e. the default is not shown). By default
   the ned assumes that in NX-OS version > 6.1 the default is enabled (i.e. it
   only shows on the device when negated: 'no service unsupported-transceiver').

   Default 'copp profile' to strict when hidden in running-config
   --
   The setting 'default-copp-profile-strict' is used to avoid sending 'no copp
   profile ...' for nx-os versions where the 'hidden' default profile is
   'strict' and NSO rolls back a transaction where the profile was changed to
   something else.


4. Sample Device Configuration
------------------------------

   For instance, create a VLAN interface:
     # configure
     # devices device nxdev config
     # vlan 10
     # name TEST-VLAN
     # interface Vlan10
     # no shutdown
     # ip address 1.2.3.4/24
     # commit

   Verify that NCS is in-sync with the device

   Alternative 1
     # check-sync

   Alternative 2
     # compare-config

5. Show Device Statistics
-------------------------

  The NED has support for the Cisco Nexus native show command.
  For instance, to display some BGP summary:

     # devices device nxdev live-status exec show bgp l2vpn evpn sum
     result BGP summary information for VRF default, address family L2VPN EVPN
     BGP router identifier 9.1.1.1, local AS number 65000
     BGP table version is 91, L2VPN EVPN config peers 1, capable peers 1
     0 network entries and 0 paths using 0 bytes of memory
     BGP attribute entries [0/0], BGP AS path entries [0/0]
     BGP community entries [0/0], BGP clusterlist entries [0/0]

     Neighbor        V    AS MsgRcvd MsgSent   TblVer  InQ OutQ Up/Down  State/PfxRcd
     10.1.1.1        4 65000    1123    1123       91    0    0 18:18:22 0

6. Run arbitrary commands on device
-----------------------------------

   The NED has the ability to run arbitrary commands from either exec or config
   mode. By convention, in exec-mode (i.e. live-status exec) command-lines are
   prepended with 'any'. For example:

    admin@ncs# devices device nx7k live-status exec any event manager run my_app

   To run a command in config mode, the 'exec' keyword is prepended to the
   command-line to run, like:

    admin@ncs(config)# devices device nx7k config exec default interface e3/1

   When commands run on device requests info from user, the NED defaults to just
   sending RETURN to choose a default value (if possible). Sometimes one needs
   to actually add specific answers (e.g. a password) to these prompts, this can
   be done by adding them as a list of comma-separated strings enclosed in
   square-brackets, for example:

    admin@ncs# devices device nx7k live-status exec any any ping [management, 1.2.3.4, 3, 100]

   This will send the strings enclosed in square-brackets as answers to the
   first four prompts from the device (i.e. management, 1.2.3.4 et.c.).

7. When connecting through a proxy using SSH or TELNET
------------------------------------------------------

   Do as follows to setup to connect to a NX device that resides
   behind a proxy or terminal server:

   +-----+  A   +-------+   B  +----+
   | NCS | <--> | proxy | <--> | NX |
   +-----+      +-------+      +----+

   Setup connection (A):

   # devices device cisco0 address <proxy address>
   # devices device cisco0 port <proxy port>
   # devices device cisco0 device-type cli protocol <proxy proto - telnet or ssh>
   # devices authgroups group ciscogroup umap admin remote-name <proxy username>
   # devices authgroups group ciscogroup umap admin remote-password <proxy password>
   # devices device cisco0 authgroup ciscogroup

   Setup connection (B):

   Define the type of connection to the device:

   # devices device cisco0 ned-settings cisco-nx-proxy-settings remote-connection <ssh|telnet>

   Define login credentials for the device:

   # devices device cisco0 ned-settings cisco-nx-proxy-settings remote-name <user name on the NX device>
   # devices device cisco0 ned-settings cisco-nx-proxy-settings remote-password <password on the NX device>

   Define prompt on proxy server:

   # devices device cisco0 ned-settings cisco-nx-proxy-settings proxy-prompt <prompt pattern on proxy>

   Define address and port of NX device:

   # devices device cisco0 ned-settings cisco-nx-proxy-settings remote-address <address to the NX device>
   # devices device cisco0 ned-settings cisco-nx-proxy-settings remote-port <port used on the NX device>
   # commit

8. When connecting to a terminal server
---------------------------------------

Use cisco-nx-proxy-settings remote-connection serial when you are connecting to
a terminal server. NOTE: The protocol set as the "ned protocol" (i.e. 'telnet'
in the below example) is what is used to connect to the terminal server.

You may also need to specify remote-name and remote-password if the
device has a separate set of login credentials.

Example terminal server config:

devices authgroups group term-sj-nx3k default-map remote-name 1st-username remote-password 1st-password remote-secondary-password cisco
devices device term-sj-nx3k address 1.2.3.4 port 1234
devices device term-sj-nx3k authgroup term-sj-nx3k device-type cli ned-id cisco-nx protocol telnet
devices device term-sj-nx3k connect-timeout 30 read-timeout 600 write-timeout 600
devices device term-sj-nx3k state admin-state unlocked
devices device term-sj-nx3k ned-settings cisco-nx-proxy-settings remote-connection serial
devices device term-sj-nx3k ned-settings cisco-nx-proxy-settings remote-name 2nd-username
devices device term-sj-nx3k ned-settings cisco-nx-proxy-settings remote-password 2nd-password


9. Connection related ned-settings (under container cisco-nx-connection)
------------------------------------------------------------------------

To control the behaviour of the NED when it encounters a "transient"
error reported by device, there are two ned-settings, described
below. Currently the errors considered transient are hard-coded into
the NED. Replies from the device which contains (case-insensitive) any
of the following lines (without the quotes) as part of the
error-message are considered transient errors:

  "wait for it to complete"
  "re-try this command at a later time"
  "please try creating later"
  "is being removed, retry later"
  "wait for the system"

EXAMPLE: if the device replies with the message:
"Configuration update aborted: services in transient state,
wait for the system to stabilize"

This will be considered a transient failure since the string "wait for
the system" is part of the message.

By default the NED will retry 60 times, with a one second delay
(before cisco-nx version v4.3.6 this was hard-coded, and was only done
in CLI mode). The below ned-settings are now available to control the
count/delay.

NOTE: Both CLI and NXAPI modes use the same retry-behaviour/settings
as of cisco-nx v4.3.6. In NXAPI the field 'clierror' is used for
determining if a reply is to be interpreted as a transient error.

cisco-nx-connection/device-retry-count
--
This setting controls the number of times to retry (set zero to fail
instantly, without retry).

cisco-nx-connection/device-retry-delay
--
This setting controls the delay (in milli-seconds) between retry
attempts, the default if not set is 1000 milli-seconds.
